/* Generated By:JJTree: Do not edit this line. ASTiMonitorMethod.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */

import java.io.*;

public
class ASTiMonitorMethod extends SimpleNode {
	
	protected String returnType;
	protected boolean isStatic;

  public ASTiMonitorMethod(int id) {
    super(id);
    isStatic = false;
  }
	
	public void setIsStatic() {
		isStatic = true;
	}
	public void setReturnType(Token t) {
		returnType = t.image;
	}
  public void process (PrintWriter ostr) {
    Token t = begin; // t corresponds to the "{" of the special block.
    if(!isStatic) {
    t.image = "{ ";
    String monitorName = ((ASTiMonitorClass)parent).getMonitorName(); 
    if(returnType.equals("void")) {
    	t.image += monitorName + ".DoWithin( new Runnable() { ";
    	t.image += "public void run() {";
		}
		else {
    	t.image += "return " + monitorName + ".DoWithin( new Runnable<";
    	t.image += returnType + ">() {";
    	t.image += "public " + returnType + " run() {";
		}
		}
    while (t != end) {
      print(t, ostr);
      t = t.next;
    }
    // t now corresponds to the last "}" of the special block.
    if(!isStatic) {
    t.image = "} }); }";
		}
    print(t, ostr);
  }

}
/* JavaCC - OriginalChecksum=a37963e2c188d95c96d50ef100e9a936 (do not edit this line) */
