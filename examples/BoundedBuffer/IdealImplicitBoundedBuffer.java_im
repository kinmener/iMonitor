
public monitor class IdealImplicitBoundedBuffer implements ObjectBoundedBufferInterface {

  private final Object[] items;
  private int putptr, takeptr, count;

  public IdealImplicitBoundedBuffer(int n) {
    items = new Object[n];
    putptr = takeptr = count = 0;
  }

  public void put(final Object x) {
    await(count < items.length);
    items[putptr] = x; 
    if (++putptr == items.length) putptr = 0;
    ++count;
    System.out.println("Producer " + Thread.currentThread() + " puts, #obj: " + count) ; 
  }

  public Object take() {
    await(count > 0);
    Object x = items[takeptr]; 
    if (++takeptr == items.length) takeptr = 0;
    --count;
    System.out.println("Consumer " + Thread.currentThread() + " takes, #obj: " + count) ; 
    return x;
  }
}
